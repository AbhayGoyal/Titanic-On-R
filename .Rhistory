library(readr)
train <- read_csv("C:/Users/Abhay Goyal/Downloads/train.csv")
View(train)
str(train)
train <- read.csv("train.csv", stringsAsFactors = FALSE)
table(train$Survived)
prop.table(table(train$Survived))
prop.table(table(train$Survived))*100
library(readr)
test <- read_csv("C:/Users/Abhay Goyal/Downloads/test.csv")
View(test)
test$Survived <- rep(0,418)
table(train$Sex)
prop.table(table(train$Sex))
prop.table(table(train$Sex,train$Survived))
prop.table(table(train$Sex,train$Survived),1)
test$Survived <- 0
test$Survived[test$Sex == 'female'] <-1
summary(train$Age)
train$Child
train$Child <- 0
train$Child[train$Age < 18 ] <- 1
aggregate(Survived ~ Sex + Child, data=train, FUN=sum)
aggregate(Survived ~ Sex + Child, data=train, FUN=length)
aggregate(Survived ~ Sex + Child, data=train, FUN=function(x){sum(x)/length(x)})
aggregate(Survived ~ Sex + Child, data=train, FUN=function(x){sum(x)/length(x)}*100)
train$Fare
train$Fare2 < '30+'
train$Fare2 <- '30+'
train$Fare2[train$Fare <30 & train$Fare>=20] <- '20-30'
train$Fare2[train$Fare <20 & train$Fare>=10] <- '10-20'
train$Fare2[train$Fare <10] <- '<10'
aggregate(Survived ~ Sex + Pclass + Fare2, data=train, function(x){sum(x)/length(x)})
aggregate(Survived ~ Sex + Pclass + Fare2, data=train, function(x){sum(x)/length(x)}*100)
test$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1
test$Survived[test$Sex == 'female' & test$Pclass == 3 & test$Fare >= 20] <- 0
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked , data=train, method="class")
plot(fit)
text(fit)
install.packages(rattle)
install.packages("rattle")
install.packages("rpart.plot")
install.packages("RColorBrewer")
library(RColorBrewer)
library(rattle)
install.packages('rattle')
library(rattle)
library(rpart.plot)
fancyRpartPlot(fit)
library(rpart.plot)
fancyRpartPlot(fit)
fancyRpartPlot(fit)
library(rpart)
library(rpart.plot)
fancyRpartPlot(fit)
text(fit)
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Sex, data=train, method="class")
fancyRpartPlot(fit)
library(hplot)
install.packages('hplot')
library(hplot)
install.packages('hplot')
fit <- rpart(Survived ~ Sex, data=train, method="class")
library(hplot)
fancyRpartPlot(fit)
rpart.plot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked , data=train, method="class")
rpart.plot(fit)
Prediction <- predict(fit, test, type='class')
submit <- data.frame(PassengerId = test$PassengerId, SUrvived = Prediction)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data =train, method="class", control = rpart.control(missplit=2, cp=0))
rpart.plot(fit)
train$Name[1]
test$Survived <- NA
combi <- rbind(train,test)
dim(train)
dim(test)
test$Child <- 0
test$Child[test$Age < 18] <- 1
test$Fare2 <- 0
test <- subset(test, -test$Cabin)
test <- subset(test, -test$Child)
test <- subset(test, -Child)
test <- subset(test, select = -Child)
test <- subset(test, select = -Fare2)
submit <- data.frame(PassengerId = test$PassengerId, Survived=Prediction)
write.csv(submit, file="fullgrowntree.csv",row.names = FALSE)
library(readr)
train <- read_csv("C:/Users/Abhay Goyal/Downloads/train.csv")
View(train)
library(readr)
test <- read_csv("C:/Users/Abhay Goyal/Downloads/test.csv")
View(test)
train$Name[1]
test$Survived <- NA
combi <- rbind(train,test)
combi$Name <- as.character(combi$Name)
combi$Name
combi$Name <- as.character(combi$Name)
combi$Name[1]
strsplit(combi$Name[1], split = '[,.]')
strsplit(combi$Name[1], split = '[,.]')[[1]]
strsplit(combi$Name[1], split = '[,.]')[[1]][2]
combi$Title <- sapply(combi$Name, FUN= function(x){strsplit(x, split='[,.]')[[1]][2]})
combi$Title
combi$Title <- strsplit(x, split='[,.]')[[1]][2]})
combi$Title <- strsplit(x, split='[,.]')[[1]][2])
combi$Title <- strsplit(x, split='[,.]'[[1]][2])
combi$Title <- strsplit(combi$Name, split='[,.]'[[1]][2])
combi$Title
combi$Title <- strsplit(combi$Name, split = '[,.]')[[1]][2]
combi$Title
combi$Title <- sapply(combi$Name, FUN= function(x){strsplit(x, split='[,.]')[[1]][2]})
combi$Title
combi$Title <- sub(' ','', combi$Title)
combi$Title
table
table(combi$Title)
combi$Title[combi$Title %in% c('Mme','Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt','Don',''Major,'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Capt','Don','Major','Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Jonkheer','Lady','Dona','the Countess')] <- 'Lady'
table(combi$Title)
combi$Title <- factor(combi$Title)
combi$FamilySize <- combi$SibSp + combi$Parch + 1
combi$Title <- sapply(combi$Name, FUN= function(x){strsplit(x, split='[,.]')[[1]][1]})
combi$Title <- sapply(combi$Name, FUN= function(x){strsplit(x, split='[,.]')[[1]][2]})
combi$Surname <- sapply(combi$Name, FUN= function(x){strsplit(x, split='[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize), combi$Surname , sep="")
combi$FamilyID
combi$FamilyID[combi$FamilySize <=2] <- 'Small'
table(combi$FamilySize)
table(combi$FamilyID)
famIDs <- data.frame(table(combi$FamilyID))
famIDs <- famIDs[famIDs$Freq <=2,]
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
combi$FamilyID <- factor(combi$FamilyID)
